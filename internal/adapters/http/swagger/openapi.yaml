openapi: 3.0.3
info:
  title: CUJU Leaderboard API
  version: 1.0.0-mvp
  description: In-memory leaderboard ingest and query service
servers:
  - url: http://127.0.0.1:9080
paths:
  /events:
    post:
      summary: Ingest a performance event
      description: Submit a performance event for asynchronous processing. Time complexity: O(1) - Hash map lookup + channel send
      operationId: postEvent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
      responses:
        '202':
          description: Accepted for processing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ack'
        '200':
          description: Duplicate event (idempotent)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ack'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Backpressure (queue full)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /leaderboard:
    get:
      summary: Get Top-N leaderboard
      description: Retrieve top N leaderboard entries in ranked order. Time complexity: O(log n + N) - Treap in-order traversal with limit
      operationId: getLeaderboard
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
          required: true
          description: Number of results to return
      responses:
        '200':
          description: Leaderboard entries
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LeaderboardEntry'
        '400':
          description: Invalid parameter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /rank/{talent_id}:
    get:
      summary: Get rank for a talent
      description: Get rank and score for a specific talent. Time complexity: O(log n) - Single treap rank calculation
      operationId: getRank
      parameters:
        - in: path
          name: talent_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Rank and score for talent
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaderboardEntry'
        '404':
          description: Talent not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /healthz:
    get:
      summary: Prometheus metrics endpoint
      description: Health check endpoint returning Prometheus metrics in OpenMetrics format. Time complexity: O(1) - Simple status check
      operationId: healthz
      responses:
        '200':
          description: Prometheus metrics in OpenMetrics format
          content:
            application/openmetrics-text:
              schema:
                type: string
                description: Prometheus metrics in OpenMetrics format
  /stats:
    get:
      summary: Service statistics
      description: Get current service statistics and metrics in JSON format. Time complexity: O(1) - Direct metric access
      operationId: getStats
      responses:
        '200':
          description: Service statistics
          content:
            application/json:
              schema:
                type: object
                description: Service statistics and metrics
  /dashboard:
    get:
      summary: Web monitoring dashboard
      description: Web-based monitoring dashboard with real-time metrics visualization. Time complexity: O(1) - Static HTML serving
      operationId: getDashboard
      responses:
        '200':
          description: HTML dashboard
          content:
            text/html:
              schema:
                type: string
                description: HTML dashboard with real-time metrics
  /api-docs:
    get:
      summary: Interactive API documentation
      description: Interactive API documentation with Swagger UI and ReDoc interface. Time complexity: O(1) - Static HTML serving
      operationId: getApiDocs
      responses:
        '200':
          description: Swagger UI with ReDoc interface
          content:
            text/html:
              schema:
                type: string
                description: HTML page with interactive API documentation
components:
  schemas:
    Event:
      type: object
      required: [event_id, talent_id, raw_metric, skill, ts]
      properties:
        event_id:
          type: string
          format: uuid
        talent_id:
          type: string
        raw_metric:
          oneOf:
            - type: number
            - type: integer
        skill:
          type: string
        ts:
          type: string
          format: date-time
    LeaderboardEntry:
      type: object
      required: [rank, talent_id, score]
      properties:
        rank:
          type: integer
          minimum: 1
        talent_id:
          type: string
        score:
          type: number
          format: double
    Ack:
      type: object
      properties:
        status:
          type: string
          example: accepted
        duplicate:
          type: boolean
          example: false
    Error:
      type: object
      required: [code, message]
      properties:
        code:
          type: string
          example: bad_request
        message:
          type: string
          example: invalid parameter 'limit'

